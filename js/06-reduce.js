/*
 * Array.prototype.reduce(callback(acc, number), –ø–æ—á–∞—Ç–∫–æ–≤–µ –∑–Ω–∞—á–µ–Ω–Ω—è –∞–∫—É–º—É–ª—è—Ç–æ—Ä–∞) - –®–í–ï–ô–¶–ê–†–°–¨–ö–ò–ô –ù–Ü–ñ —Ä–æ–±–æ—Ç–∏ –∑ –∫–æ–ª–µ–∫—Ü—ñ—î—é ;)
 * - –ü–æ—ç–ª–µ–º–µ–Ω—Ç–æ –ø–µ—Ä–µ–±–∏—Ä–∞–µ—Ç –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –º–∞—Å—Å–∏–≤
 * - –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —á—Ç–æ —É–≥–æ–¥–Ω–æ ü§Ø
 * - –ó–∞–º–µ–Ω—è–µ—Ç –≤—Å—ë –Ω–∞ —Å–≤–µ—Ç–µ, –Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –Ω—É–∂–Ω–æ —Å —É–º–æ–º
 * - –±–µ—Ä–µ –±–∞–≥–∞—Ç–æ —ñ —Ä–æ–±–∏—Ç—å –∑ —Ü—å–æ–≥–æ –±–∞–≥–∞—Ç–æ —â–æ—Å—å –æ–¥–Ω–µ
 */

const numbers = [5, 10, 15, 20, 25];

const total = numbers.reduce((acc, number) => {
  // console.log('acc ', acc); // –ø–æ—á–∞—Ç–∫–æ–≤–µ –∑–Ω–∞—á–µ–Ω–Ω—è acc - –ø–æ—á–∞—Ç–∫–æ–≤–µ –∑–Ω–∞—á–µ–Ω–Ω—è –º–∞—Å–∏–≤—É (–∞–±–æ –¥—Ä—É–≥–∏–π –ø–∞—Ä–∞–º–µ—Ç—Ä –º–µ—Ç–æ–¥—É reduce), –∞ –¥–∞–ª—ñ –∑–Ω–∞—á–µ–Ω–Ω—è return
  // console.log('number', number);

  return acc + number; // –∑–Ω–∞—á–µ–Ω–Ω—è acc
}, 0); // –¥—Ä—É–≥–∏–π –ø–∞—Ä–∞–º–µ—Ç—Ä - –ø–æ—á–∞—Ç–∫–æ–≤–µ –∑–Ω–∞—á–µ–Ω–Ω—è acc
// console.log(total);

const total1 = numbers.reduce((acc, number) => acc + number, 0); // –¥—Ä—É–≥–∏–π –ø–∞—Ä–∞–º–µ—Ç—Ä - –ø–æ—á–∞—Ç–∫–æ–≤–µ –∑–Ω–∞—á–µ–Ω–Ω—è acc
// console.log(total1);

// accumulator = 0 -> number = 5 -> return 0 + 5
// accumulator = 5 -> number = 10 -> return 5 + 10
// accumulator = 15 -> number = 15 -> return 15 + 15
// accumulator = 30 -> number = 20 -> return 30 + 20
// accumulator = 50 -> number = 25 -> return 50 + 25

/*
 * –°—á–∏—Ç–∞–µ–º –æ–±—â—É—é –∑–∞—Ä–ø–ª–∞—Ç—É
 */

const salary = {
  mango: 100,
  poly: 50,
  ajax: 150,
};

const totalSalary1 = function (salary) {
  /**
   * forEach - –ø–µ—Ä–µ–±–∏—Ä–∞—î –ø–æ–µ–ª–µ–º–µ–Ω—Ç–Ω–æ –º–∞—Å–∏–≤ —ñ –ù–Ü–ß–û–ì–û –Ω–µ –ø–æ–≤–µ—Ä—Ç–∞—î!!
   * map - –ø–µ—Ä–µ–±–∏—Ä–∞—î –ø–æ–µ–ª–µ–º–µ–Ω—Ç–Ω–æ –º–∞—Å–∏–≤ —ñ –ü–û–í–ï–†–¢–ê–Ñ –º–∞—Å–∏–≤ —Ç–∞–∫–æ—ó –∂ –¥–æ–≤–∂–∏–Ω–∏ –∑ undefined
   * filter - –ø–µ—Ä–µ–±–∏—Ä–∞—î –ø–æ–µ–ª–µ–º–µ–Ω—Ç–Ω–æ –º–∞—Å–∏–≤ —ñ –ü–û–í–ï–†–¢–ê–Ñ –Ω–æ–≤–∏–π –º–∞—Å–∏–≤ –∑ –µ–ª–µ–º–µ–Ω—Ç–∞–º–∏, —è–∫—ñ –∑–∞–¥–æ–≤–æ–ª—å–Ω—è—é—Ç—å —É–º–æ–≤—É –≤ return
   * find - –ø–µ—Ä–µ–±–∏—Ä–∞—î –ø–æ–µ–ª–µ–º–µ–Ω—Ç–Ω–æ –º–∞—Å–∏–≤ —ñ –ü–û–í–ï–†–¢–ê–Ñ –ø–µ—Ä—à–∏–π –µ–ª–µ–º–µ–Ω—Ç, —è–∫–∏–π –∑–∞–¥–æ–≤–æ–ª—å–Ω—è—î —É–º–æ–≤—É, –∞–±–æ undefined
   *
   * every - –ø–µ—Ä–µ–±–∏—Ä–∞—î –ø–æ–µ–ª–µ–º–µ–Ω—Ç–Ω–æ –º–∞—Å–∏–≤ —ñ –ü–û–í–ï–†–¢–ê–Ñ TRUE, —è–∫—â–æ –≤—Å—ñ –µ–ª–µ–º–µ–Ω—Ç–∏ –º–∞—Å–∏–≤—É –∑–∞–¥–æ–≤–æ–ª—å–Ω—è—é—Ç—å —É–º–æ–≤—É, —ñ–Ω–∞–∫—à–µ FALSE
   * some - –ø–µ—Ä–µ–±–∏—Ä–∞—î –ø–æ–µ–ª–µ–º–µ–Ω—Ç–Ω–æ –º–∞—Å–∏–≤ —ñ –ü–û–í–ï–†–¢–ê–Ñ TRUE, —è–∫—â–æ –•–û–ß–ê –ë –û–î–ò–ù –µ–ª–µ–º–µ–Ω—Ç –º–∞—Å–∏–≤—É –∑–∞–¥–æ–≤–æ–ª—å–Ω—è—î —É–º–æ–≤—É
   */

  /// –æ—Ç–∂–µ, –Ω–∞–º –ø—ñ–¥—Ö–æ–¥–∏—Ç—å forEach

  let total = 0;

  Object.values(salary).forEach(sal => (total += sal));

  return total;
};

// console.log(totalSalary1(salary));

const values = Object.values(salary);
const totalSalary = values.reduce((total, value) => total + value, 0);

// –∞–±–æ
// const totalSalary = Object.values(salary).reduce(
//   (total, value) => total + value,
//   0,
// );

// console.log(totalSalary);

/*
 * –°—á–∏—Ç–∞–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–∞—Å–æ–≤
 */

const players = [
  { id: 'player-1', name: 'Mango', timePlayed: 310, online: false },
  { id: 'player-2', name: 'Poly', timePlayed: 470, online: true },
  { id: 'player-3', name: 'Kiwi', timePlayed: 230, online: true },
  { id: 'player-4', name: 'Ajax', timePlayed: 150, online: false },
  { id: 'player-5', name: 'Chelsey', timePlayed: 80, online: true },
];

// const totalTimePlayed = players.reduce((totalTime, player) => {
//   console.log('totalTime: ', totalTime);
//   console.log('timePlayed: ', player.timePlayed);
//   console.log(
//     `totalTime + timePlayed = ${totalTime} + ${player.timePlayed} `,
//     totalTime + player.timePlayed,
//   );

//   return totalTime + player.timePlayed;
// }, 0);

// console.log('totalTimePlayed: ', totalTimePlayed);

// const totalTimePlayed = players.reduce(
//   (totalTime, player) => totalTime + player.timePlayed,
//   0,
// );

// console.log(totalTimePlayed);

/*
 * –°—á–∏—Ç–∞–µ–º –æ–±—â—É—é —Å—É–º–º—É —Ç–æ–≤–∞—Ä–æ–≤ –∫–æ—Ä–∑–∏–Ω—ã
 */
const cart = [
  { label: 'Apples', price: 100, quantity: 2 },
  { label: 'Bananas', price: 120, quantity: 3 },
  { label: 'Lemons', price: 70, quantity: 4 },
];

const totalAmount = cart.reduce(
  (total, { price, quantity }) => total + price * quantity,
  0,
);

// console.log(totalAmount);

/*
 * –°–æ–±–∏—Ä–∞–µ–º –≤—Å–µ —Ç–µ–≥–∏ –∏–∑ —Ç–≤–∏—Ç–æ–≤
 */
const tweets = [
  { id: '000', likes: 5, tags: ['js', 'nodejs'] },
  { id: '001', likes: 2, tags: ['html', 'css'] },
  { id: '002', likes: 17, tags: ['html', 'js', 'nodejs'] },
  { id: '003', likes: 8, tags: ['css', 'react'] },
  { id: '004', likes: 0, tags: ['js', 'nodejs', 'react'] },
];

// const allTags = tweets.reduce((acc, tweet) => {
//   // acc.push(...tweet.tags); // –ø–æ–≥–∞–Ω–∏–π –∫–æ–¥, –±–æ –º–∏ –∑–º—ñ–Ω—é—î–º–æ –æ—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω–∏–π tags

/**
 * —Å—Ç–≤–æ—Ä—é–º–æ –Ω–æ–≤–∏–π –º–∞—Å–∏–≤ –≤ return
 * —Ä–æ–∑–ø–∏–ª—è—î–º–æ —Ç—É–¥–∏ –º–∞—Å–∏–≤ acc = [] —ñ –º–∞—Å–∏–≤ tweet = ['js', 'nodejs']
 * [...acc, ...tweet] = [...[], ...['js', 'nodejs']] = ['js', 'nodejs'] = acc
 *
 * —Ç–µ, —â–æ –º–∏ –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ, —Ü–µ –Ω–æ–≤–∏–π –∞–∫—É–º—É–ª—è—Ç–æ—Ä!!
 */
//   return [...acc, ...tweet];
// }, []);

const allTags = tweets.reduce((tags, tweet) => [...tags, ...tweet.tags], []);
console.log(allTags);

// acc = [], tweet.tags = ['js', 'nodejs'] return [...[], ...['js', 'nodejs']]
// acc = ['js', 'nodejs'] tweet.tags ['html', 'css']
// return  [...['js', 'nodejs'], ...['html', 'css']]
//  ['js', 'nodejs', 'html', 'css']

/*
 * –í–µ–¥—ë–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ç–µ–≥–æ–≤
 */
// const tagsStats = allTags.reduce((acc, tag) => {
//   if (acc[tag]) {
//     acc[tag] += 1;

//     return acc;
//   }

//   acc[tag] = 1;

//   return acc;
// }, {});

// console.log(tagsStats);

// const tagsStats = allTags.reduce((acc, tag) => {
//   /// –≤–∞—Ä—ñ–∞–Ω—Ç 1
//   // if (acc[tag]) {
//   //   return {
//   //     ...acc,
//   //     [tag]: acc[tag] + 1,
//   //   };
//   // }

//   // return {
//   //   ...acc,
//   //   [tag]: 1,
//   // };

//   /// –≤–∞—Ä—ñ–∞–Ω—Ç 2
//   return {
//     ...acc,
//     [tag]: acc[tag] ? acc[tag] + 1 : 1,
//   };
// }, {});

/// –≤–∞—Ä—ñ–∞–Ω—Ç 3
const tagsStats = allTags.reduce(
  (acc, tag) => ({
    ...acc,
    [tag]: acc[tag] ? acc[tag] + 1 : 1,
  }),
  {},
);

console.log(tagsStats);

// const tagsStats = allTags.reduce((acc, tag) => {
//   return {
//     ...acc,
//     [tag]: acc[tag] ? acc[tag] + 1 : 1,
//   };
// }, {});
// console.log(tagsStats);

// –µ—Å–ª–∏ —Å–≤–æ–π—Å—Ç–≤–æ —Å –∫–ª—é—á–æ–º tag –µ—Å—Ç—å. —É–≤–µ–ª–∏—á–∏—Ç—å –µ–≥–æ –∑–Ω–∞—á–µ–Ω–∏–µ –Ω–∞ 1
// –µ—Å–ª–∏ —Å–≤–æ–π—Å—Ç–≤–æ—Å—Ç–≤–∞ –Ω–µ—Ç —Å —Ç–∞–∫–∏–º –∫–ª—é—á–æ–º —á—Ç–æ –≤ tag, —Å–¥–µ–ª–∞—Ç—å –∏ –∑–∞–ø–∏—Å–∞—Ç—å 1
